{
  "_args": [
    [
      {
        "raw": "cylon-raspi",
        "scope": null,
        "escapedName": "cylon-raspi",
        "name": "cylon-raspi",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/ethan/programming/ethanwillis/openbehavior/internetofopenbehavior"
    ]
  ],
  "_from": "cylon-raspi@latest",
  "_id": "cylon-raspi@0.20.1",
  "_inCache": true,
  "_location": "/cylon-raspi",
  "_nodeVersion": "5.8.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/cylon-raspi-0.20.1.tgz_1461719703519_0.46462447685189545"
  },
  "_npmUser": {
    "name": "deadprogram",
    "email": "ron@hybridgroup.com"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cylon-raspi",
    "scope": null,
    "escapedName": "cylon-raspi",
    "name": "cylon-raspi",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cylon-raspi/-/cylon-raspi-0.20.1.tgz",
  "_shasum": "6c3425925ef19e3b54cbcc6357a671ded0a6332b",
  "_shrinkwrap": null,
  "_spec": "cylon-raspi",
  "_where": "/home/ethan/programming/ethanwillis/openbehavior/internetofopenbehavior",
  "author": {
    "name": "The Hybrid Group",
    "email": "cylonjs@hybridgroup.com"
  },
  "bugs": {
    "url": "https://github.com/hybridgroup/cylon-raspi/issues"
  },
  "dependencies": {
    "cylon": "^1.3.0",
    "i2c-bus": "^1.0.0"
  },
  "description": "Cylon adaptor for Raspberry Pi",
  "devDependencies": {
    "chai": "~1.7.2",
    "eslint": "0.22.1",
    "mocha": "~1.12.1",
    "sinon": "~1.7.3",
    "sinon-chai": "~2.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "6c3425925ef19e3b54cbcc6357a671ded0a6332b",
    "tarball": "https://registry.npmjs.org/cylon-raspi/-/cylon-raspi-0.20.1.tgz"
  },
  "gitHead": "14854d9d6b178fa8d5fba0373df5981e06a6b0d4",
  "homepage": "http://cylonjs.com",
  "keywords": [
    "cylon",
    "cylonjs",
    "cylons",
    "robot",
    "robots",
    "robotics",
    "iot",
    "hardware",
    "gpio",
    "i2c",
    "raspberry pi",
    "raspberrypi",
    "raspi"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    {
      "name": "andrewstewart",
      "email": "andrew@stwrt.ca"
    },
    {
      "name": "deadprogram",
      "email": "ron@hybridgroup.com"
    },
    {
      "name": "edgarsilva",
      "email": "edgar.osc@gmail.com"
    }
  ],
  "name": "cylon-raspi",
  "optionalDependencies": {
    "i2c-bus": "^1.0.0"
  },
  "readme": "# Cylon.js For Raspberry Pi\n\nCylon.js (http://cylonjs.com) is a JavaScript framework for robotics, physical computing, and the Internet of Things (IoT).\n\nThis module provides an adaptor for the Raspberry Pi single board computer (http://www.raspberrypi.org/). It currently works with all models of Raspberry Pi including the Raspberry Pi 2 and Raspberry Pi 3.\n\nWant to use Ruby on robots? Check out our sister project Artoo (http://artoo.io)\n\nWant to use the Go programming language to power your robots? Check out our sister project Gobot (http://gobot.io).\n\n[![Build Status](https://secure.travis-ci.org/hybridgroup/cylon-raspi.png?branch=master)](http://travis-ci.org/hybridgroup/cylon-raspi) [![Code Climate](https://codeclimate.com/github/hybridgroup/cylon-raspi/badges/gpa.svg)](https://codeclimate.com/github/hybridgroup/cylon-raspi) [![Test Coverage](https://codeclimate.com/github/hybridgroup/cylon-raspi/badges/coverage.svg)](https://codeclimate.com/github/hybridgroup/cylon-raspi)\n\n## How to Install\n\nInstalling Cylon.js for the Raspberry Pi is easy, but must be done on the Raspi itself, or on another Linux computer. Due to I2C device support, the module cannot be installed on OS X or Windows.\n\nInstall the module with:\n\n    $ npm install cylon cylon-raspi cylon-gpio cylon-i2c\n\n## How to Use\n\nThis small program causes an LED to blink.\n\n```javascript\nvar Cylon = require(\"cylon\");\n\nCylon.robot({\n  connections: {\n    raspi: { adaptor: 'raspi' }\n  },\n\n  devices: {\n    led: { driver: 'led', pin: 11 }\n  },\n\n  work: function(my) {\n    every((1).second(), my.led.toggle);\n  }\n}).start();\n```\n\n## How to Connect\n\n### Install the latest Raspbian OS\n\nYou can get it from here: [http://www.raspberrypi.org/downloads/](http://www.raspberrypi.org/downloads/)\n\n### Setting the Raspberry Pi keyboard\n\nHaving trouble with your Raspberry Pi keyboard layout? Use the following command:\n\n    sudo dpkg-reconfigure keyboard-configuration\n\n### Update your Raspbian and install Node.js\n\nThese commands need to be run after SSHing into the Raspi:\n\n    sudo apt-get update\n    sudo apt-get upgrade\n\n### Install Node.js\n\nYou can either install the latest Node.js via the Nodesource Debian repo, or else use `nvm` (https://github.com/creationix/nvm).\n\nTo use the Debian package, first add the Nodesource package repo:\n\n    curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -\n\nThen install the latest Node.js by running this command:\n\n    sudo apt-get install -y nodejs\n\nYou should see the node version you just installed.\n\n    $ node --version\n    v5.6.0\n\n### Connecting to Raspberry Pi GPIO\n\nThis module only works on a real Raspberry Pi. Do not bother trying on any other kind of computer, it will not work.\nAlso note you will need to connect actual circuits to the Raspberry Pi's GPIO pins.\n\nIn order to access the GPIO pins without using `sudo` you will need to both app the pi user to the `gpio` group:\n\n    sudo usermod -G gpio pi\n\nAnd also add the following udev rules file to `/etc/udev/rules.d/91-gpio.rules`:\n\n    SUBSYSTEM==\"gpio\", KERNEL==\"gpiochip*\", ACTION==\"add\", PROGRAM=\"/bin/sh -c 'chown root:gpio /sys/class/gpio/export /sys/class/gpio/unexport ; chmod 220 /sys/class/gpio/export /sys/class/gpio/unexport'\"\n    SUBSYSTEM==\"gpio\", KERNEL==\"gpio*\", ACTION==\"add\", PROGRAM=\"/bin/sh -c 'chown root:gpio /sys%p/active_low /sys%p/direction /sys%p/edge /sys%p/value ; chmod 660 /sys%p/active_low /sys%p/direction /sys%p/edge /sys%p/value'\"\n\nThanks to \"MikeDK\" for the above solution: [https://www.raspberrypi.org/forums/viewtopic.php?p=198148#p198148](https://www.raspberrypi.org/forums/viewtopic.php?p=198148#p198148)\n\n### Enabling the Raspberry Pi i2c on Raspbian\n\n#### Easy Install\n\nThe really easy way to configure your i2c is to use the `i2c-tools` extensions for `raspi-config`. You can install it like this:\n\n```\nsudo apt-get install i2c-tools\n```\n\nOnce installed, run `sudo raspi-config` and choose the \"Advanced Settings\" menu. Select the \"I2C Settings\" and follow the prompts. You will need to reboot after changing the settings.\n\n#### Manual Install\n\nYou must add these two entries to your `/etc/modules`\n\n    i2c-bcm2708\n    i2c-dev\n\nYou must also ensure that these entries are commented in your `/etc/modprobe.d/raspi-blacklist.conf`\n\n    #blacklist spi-bcm2708\n    #blacklist i2c-bcm2708\n\nYou will also need to update the /boot/config.txt file. Edit it add the following text:\n\n    dtparam=i2c1=on\n    dtparam=i2c_arm=on\n\nFinally, you need to allow the `pi` user permissions to access the i2c interface by running this command:\n\n    sudo usermod -G i2c pi\n\nNow restart your Raspberry Pi.\n\n### Enabling PWM output on GPIO pins.\n\nYou need to install and have pi-blaster running in the raspberry-pi, you can follow the instructions for pi-blaster install in the pi-blaster repo here:\n\n[https://github.com/sarfata/pi-blaster](https://github.com/sarfata/pi-blaster)\n\n### Available PINS\n\nThe following object depicts available pins for all revisions of raspberry-pi, the `key` is the actual number of the physical pin header on the board,the `value` is the GPIO pin number assigned by the OS, for the pins with changes between board revisions, the value contains the variations of GPIO pin number assignment between them (eg.rev1, rev2, rev3).\n\nYou should just be concerned with the `key` (number of the physical pin header on the board), Cylon.JS takes care of the board revision and GPIO pin numbers for you, this full list is for reference only.\n\n```javascript\nPINS = {\n  3: {\n    rev1: 0,\n    rev2: 2,\n    rev3: 2\n  },\n  5: {\n    rev1: 1,\n    rev2: 3,\n    rev3: 3\n  },\n  7: 4,\n  8: 14,\n  10: 15,\n  11: 17,\n  12: 18,\n  13: {\n    rev1: 21,\n    rev2: 27,\n    rev3: 27\n  },\n  15: 22,\n  16: 23,\n  18: 24,\n  19: 10,\n  21: 9,\n  22: 25,\n  23: 11,\n  24: 8,\n  29: {\n    rev3: 5\n  },\n  31: {\n    rev3: 6\n  },\n  32: {\n    rev3: 12\n  },\n  33: {\n    rev3: 13\n  },\n  35: {\n    rev3: 19\n  },\n  36: {\n    rev3: 16\n  },\n  37: {\n    rev3: 26\n  },\n  38: {\n    rev3: 20\n  },\n  40: {\n    rev3: 21\n  }\n};\n```\n\nThe website http://pi.gadgetoid.com/pinout has a great visual representation of this information.\n\n## Documentation\n\nWe're busy adding documentation to our web site at http://cylonjs.com/ please check there as we continue to work on Cylon.js\n\nThank you!\n\n## Contributing\n\nFor our contribution guidelines, please go to [https://github.com/hybridgroup/cylon/blob/master/CONTRIBUTING.md\n](https://github.com/hybridgroup/cylon/blob/master/CONTRIBUTING.md\n).\n\n## Release History\n\nFor the release history, please go to [https://github.com/hybridgroup/cylon-raspi/blob/master/RELEASES.md\n](https://github.com/hybridgroup/cylon-raspi/blob/master/RELEASES.md\n).\n\n## License\nCopyright (c) 2013-2016 The Hybrid Group. Licensed under the Apache 2.0 license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hybridgroup/cylon-raspi.git"
  },
  "scripts": {},
  "version": "0.20.1"
}
